#!/usr/bin/env python3
"""
–ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∞—è —É—Å—Ç–∞–Ω–æ–≤–∫–∞ –∏ –Ω–∞—Å—Ç—Ä–æ–π–∫–∞ Telegram News Bot
"""
import os
import sys
import subprocess
import shutil
from pathlib import Path


def run_command(cmd, shell=True):
    """–í—ã–ø–æ–ª–Ω–∏—Ç—å –∫–æ–º–∞–Ω–¥—É –∏ –ø–æ–∫–∞–∑–∞—Ç—å —Ä–µ–∑—É–ª—å—Ç–∞—Ç"""
    print(f"–í—ã–ø–æ–ª–Ω—è—é: {cmd}")
    result = subprocess.run(cmd, shell=shell, capture_output=True, text=True)
    if result.returncode != 0:
        print(f"–û—à–∏–±–∫–∞: {result.stderr}")
        return False
    if result.stdout:
        print(result.stdout)
    return True


def check_python():
    """–ü—Ä–æ–≤–µ—Ä–∏—Ç—å –≤–µ—Ä—Å–∏—é Python"""
    if sys.version_info < (3, 10):
        print("‚ùå –¢—Ä–µ–±—É–µ—Ç—Å—è Python 3.10 –∏–ª–∏ –≤—ã—à–µ")
        print(f"–¢–µ–∫—É—â–∞—è –≤–µ—Ä—Å–∏—è: {sys.version}")
        return False
    print(f"‚úÖ Python {sys.version.split()[0]} - OK")
    return True


def setup_venv():
    """–°–æ–∑–¥–∞—Ç—å –≤–∏—Ä—Ç—É–∞–ª—å–Ω–æ–µ –æ–∫—Ä—É–∂–µ–Ω–∏–µ"""
    venv_path = Path("venv")
    if venv_path.exists():
        print("‚úÖ –í–∏—Ä—Ç—É–∞–ª—å–Ω–æ–µ –æ–∫—Ä—É–∂–µ–Ω–∏–µ —É–∂–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç")
        return True
    
    print("üì¶ –°–æ–∑–¥–∞—é –≤–∏—Ä—Ç—É–∞–ª—å–Ω–æ–µ –æ–∫—Ä—É–∂–µ–Ω–∏–µ...")
    if not run_command(f"{sys.executable} -m venv venv"):
        return False
    print("‚úÖ –í–∏—Ä—Ç—É–∞–ª—å–Ω–æ–µ –æ–∫—Ä—É–∂–µ–Ω–∏–µ —Å–æ–∑–¥–∞–Ω–æ")
    return True


def get_pip_command():
    """–ü–æ–ª—É—á–∏—Ç—å –∫–æ–º–∞–Ω–¥—É pip –¥–ª—è —Ç–µ–∫—É—â–µ–π –û–°"""
    if os.name == 'nt':  # Windows
        return "venv\\Scripts\\pip"
    else:  # Linux/Mac
        return "venv/bin/pip"


def get_python_command():
    """–ü–æ–ª—É—á–∏—Ç—å –∫–æ–º–∞–Ω–¥—É python –¥–ª—è —Ç–µ–∫—É—â–µ–π –û–°"""
    if os.name == 'nt':  # Windows
        return "venv\\Scripts\\python"
    else:  # Linux/Mac
        return "venv/bin/python"


def install_dependencies():
    """–£—Å—Ç–∞–Ω–æ–≤–∏—Ç—å –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏"""
    pip_cmd = get_pip_command()
    
    print("üì¶ –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞—é –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏...")
    if not run_command(f"{pip_cmd} install --upgrade pip"):
        return False
    
    if not run_command(f"{pip_cmd} install -r requirements.txt"):
        return False
    
    print("üì± –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞—é telethon –¥–ª—è –ø–∞—Ä—Å–∏–Ω–≥–∞ Telegram-–∫–∞–Ω–∞–ª–æ–≤...")
    if not run_command(f"{pip_cmd} install telethon==1.35.0"):
        print("‚ö†Ô∏è  –ù–µ —É–¥–∞–ª–æ—Å—å —É—Å—Ç–∞–Ω–æ–≤–∏—Ç—å telethon, –Ω–æ —ç—Ç–æ –Ω–µ –∫—Ä–∏—Ç–∏—á–Ω–æ")
    
    print("‚úÖ –ó–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω—ã")
    return True


def setup_env():
    """–ù–∞—Å—Ç—Ä–æ–∏—Ç—å —Ñ–∞–π–ª .env"""
    env_path = Path(".env")
    env_example_path = Path(".env.example")
    
    if env_path.exists():
        print("‚úÖ –§–∞–π–ª .env —É–∂–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç")
        return True
    
    if not env_example_path.exists():
        print("‚ùå –§–∞–π–ª .env.example –Ω–µ –Ω–∞–π–¥–µ–Ω")
        return False
    
    print("üìù –°–æ–∑–¥–∞—é —Ñ–∞–π–ª .env...")
    shutil.copy(env_example_path, env_path)
    print("‚úÖ –§–∞–π–ª .env —Å–æ–∑–¥–∞–Ω")
    print("‚ö†Ô∏è  –ù–µ –∑–∞–±—É–¥—å—Ç–µ —É–∫–∞–∑–∞—Ç—å BOT_TOKEN –≤ —Ñ–∞–π–ª–µ .env!")
    return True


def main():
    """–ì–ª–∞–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è —É—Å—Ç–∞–Ω–æ–≤–∫–∏"""
    print("üöÄ –ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∞—è —É—Å—Ç–∞–Ω–æ–≤–∫–∞ Telegram News Bot")
    print("=" * 50)
    
    # –ü—Ä–æ–≤–µ—Ä–∫–∞ Python
    if not check_python():
        return False
    
    # –°–æ–∑–¥–∞–Ω–∏–µ venv
    if not setup_venv():
        return False
    
    # –£—Å—Ç–∞–Ω–æ–≤–∫–∞ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–µ–π
    if not install_dependencies():
        return False
    
    # –ù–∞—Å—Ç—Ä–æ–π–∫–∞ .env
    if not setup_env():
        return False
    
    print("\n" + "=" * 50)
    print("‚úÖ –£—Å—Ç–∞–Ω–æ–≤–∫–∞ –∑–∞–≤–µ—Ä—à–µ–Ω–∞!")
    print("\nüìã –°–ª–µ–¥—É—é—â–∏–µ —à–∞–≥–∏:")
    print("1. –û—Ç–∫—Ä–æ–π—Ç–µ —Ñ–∞–π–ª .env –∏ —É–∫–∞–∂–∏—Ç–µ –≤–∞—à BOT_TOKEN")
    print("2. –ó–∞–ø—É—Å—Ç–∏—Ç–µ –±–æ—Ç–∞ –∫–æ–º–∞–Ω–¥–æ–π:")
    if os.name == 'nt':
        print("   run.bat")
    else:
        print("   ./run.sh")
    print("\nüéâ –ì–æ—Ç–æ–≤–æ –∫ —Ä–∞–±–æ—Ç–µ!")
    
    return True


if __name__ == "__main__":
    success = main()
    sys.exit(0 if success else 1)
